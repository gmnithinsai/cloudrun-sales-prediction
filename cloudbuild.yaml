steps:
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo-nithin/cloud-run-ml-sales-prediction:$SHORT_SHA',
        '.'
      ]
    id: 'Build Docker image'

  # Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo-nithin/cloud-run-ml-sales-prediction:$SHORT_SHA'
      ]
    id: 'Push to Artifact Registry'

  # (Optional) Deploy to Cloud Run directly (can skip if Cloud Deploy fully handles deployment)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'run', 'deploy', 'cloud-run-ml-sales-prediction',
        '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo-nithin/cloud-run-ml-sales-prediction:$SHORT_SHA',
        '--region', 'us-central1',
        '--platform', 'managed',
        '--allow-unauthenticated',
        '--set-env-vars', 'VERSION=$SHORT_SHA'
      ]
    id: 'Deploy to Cloud Run'

  # Trigger Cloud Deploy Release
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'deploy', 'releases', 'create', 'release-$BUILD_ID',
        '--delivery-pipeline', 'sales-pred-pipeline-nithin',
        '--region', 'us-west1',
        '--skaffold-file', 'skaffold.yaml',
        '--images',
        'cloud-run-ml-sales-prediction=us-central1-docker.pkg.dev/$PROJECT_ID/my-repo-nithin/cloud-run-ml-sales-prediction:$SHORT_SHA'
      ]
    id: 'Create Cloud Deploy Release'

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

substitutions:
  _SERVICE_NAME: cloud-run-app-nithin
